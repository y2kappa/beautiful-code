<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Beautiful Code</title>
    <link>https://y2kappa.github.io/beautiful-code/</link>
    <description>Recent content on Beautiful Code</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 12 May 2020 08:01:54 +0100</lastBuildDate>
    
	<atom:link href="https://y2kappa.github.io/beautiful-code/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Unit Testing in Rust</title>
      <link>https://y2kappa.github.io/beautiful-code/posts/unit-testing-in-rust/</link>
      <pubDate>Tue, 12 May 2020 08:01:54 +0100</pubDate>
      
      <guid>https://y2kappa.github.io/beautiful-code/posts/unit-testing-in-rust/</guid>
      <description>If you&amp;rsquo;ve been through the process of adding unit tests in C++ with gmock or OCaml or python you know that you at least need to create a new file, add some linking flags, import a library and trigger the test suite from code and then execute the test program sepately.
No wonder it takes some painful code review comment to get people to start writing tests.
Rust turns that pain into pleasure.</description>
    </item>
    
    <item>
      <title>A less dreadful linked list</title>
      <link>https://y2kappa.github.io/beautiful-code/posts/linked-list/</link>
      <pubDate>Sun, 10 May 2020 22:18:20 +0100</pubDate>
      
      <guid>https://y2kappa.github.io/beautiful-code/posts/linked-list/</guid>
      <description>Let&amp;rsquo;s assume the entire universe hates linked lists. But in OCaml</description>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://y2kappa.github.io/beautiful-code/posts/hello-world/</link>
      <pubDate>Sun, 10 May 2020 19:17:56 +0100</pubDate>
      
      <guid>https://y2kappa.github.io/beautiful-code/posts/hello-world/</guid>
      <description>I recently listened to a podcast in which Elizabeth Gilbert mentioned that sometimes when she reads a well written sentence, it makes her want to stand up an clap for how well written that is.
I believe the same concept applies to code. I agree with the idea that code is meant to be read, that code is read 10 times more than it is written and therefore we need to optimize for that.</description>
    </item>
    
  </channel>
</rss>