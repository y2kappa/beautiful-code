<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>functional on Beautiful Code</title>
    <link>https://y2kappa.github.io/beautiful-code/tags/functional/</link>
    <description>Recent content in functional on Beautiful Code</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 10 May 2020 22:18:20 +0100</lastBuildDate>
    
	<atom:link href="https://y2kappa.github.io/beautiful-code/tags/functional/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Fibofibofibo</title>
      <link>https://y2kappa.github.io/beautiful-code/posts/fibofibofibo/</link>
      <pubDate>Sun, 10 May 2020 22:18:20 +0100</pubDate>
      
      <guid>https://y2kappa.github.io/beautiful-code/posts/fibofibofibo/</guid>
      <description>Let&amp;rsquo;s assume the entire universe hates linked lists, but somehow functional languages make them bearable. I don&amp;rsquo;t mean to trash them too harshly, I did learn a lot about memory management in C++ using linked lists, but that came at a cost to my soul.
That being said, check this out:
type linked_list = | End | Node of int * linked_list let ll = Node (1, Node(2, Node(3, End)));; Printing:</description>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://y2kappa.github.io/beautiful-code/posts/hello-world/</link>
      <pubDate>Sun, 10 May 2020 19:17:56 +0100</pubDate>
      
      <guid>https://y2kappa.github.io/beautiful-code/posts/hello-world/</guid>
      <description>I recently listened to a podcast in which Elizabeth Gilbert mentioned that sometimes when she reads a well written sentence, it makes her want to stand up an clap for how well written that is.
I believe the same concept applies to code. I agree with the idea that code is meant to be read, that code is read 10 times more than it is written and therefore we need to optimize for that.</description>
    </item>
    
  </channel>
</rss>